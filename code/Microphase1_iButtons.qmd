---
title: "IRES 2022 Microclimate ibutton phase1"
author: "Heather Throop"
format: html
editor: visual
editor_options: 
  chunk_output_type: console
---

## Overview

This file works up iButton data from the 2022 IRES Microclimate project, microphase 1. Original iButton csv files (L0 data) are pulled in, annotated, cleaned, and saved as a L1 file. This file can be pulled in for future analyses (start at L1 section).

File written: 9 July 2025, Heather Throop\
Last update: 13 July 2025, Heather Throop

## Preparation Steps

```{r}
#| echo: false
#| label: load packages 

library(here) # v. 0.1
library(stringr) # v. 1.2.0
library(purrr) # v. 0.2.3
library(tidyverse)
library(lubridate)
```

## L0 to L1 iButton Compilation

### This can be skipped - use compiled L1 data (see next header)

```{r}
#| label: pull in L0 iButton data

### NOTE - THIS SECTION CAN BE SKIPPED AND THE L1 file can be used

#--read and work up data for microphase 1-----------

# list all files to read in
( allfiles = list.files(path = here("data", "Microphase1.iButtons.L0"), # get a list of all files in folder
                        pattern = ".csv", # only files that end in .csv
                        full.names = TRUE,  # return the complete file path (and not just the file name)
                        recursive = TRUE) ) # include the child folders in the directory

# read in one file and extract identifying information from the file name
( test = read.csv(allfiles[1], #read in the first file listed in "allfiles"
                  skip = 15, # skip the first 15 lines (they are extraneous header info)
                  header = FALSE, # there are no column headers
                  col.names = c("date", "time", "unit", "temperature") ) ) #add column headers

( allnames = str_split( allfiles[1], pattern = "/", simplify = TRUE) ) #create a matrix of strings for file info

str_extract(allnames[, ncol(allnames)], pattern = "Q[1-9]") #extract the block number from the file name
test$condition = str_extract(allnames[, ncol(allnames)], pattern = "B|G") #extract the litter condition from the file name and add as a column
test$species = str_extract(allnames[, ncol(allnames)], pattern = "SS|SP") #extract the species code from the file name and add as a column
test$quadrat = str_extract(allnames[, ncol(allnames)], pattern = "Q[1-9]") #extract the quadrat from the file name and add as a column

# function to do the above reading and extracting identifying information (so this can be done on all the files)
read_fun = function(path) {
  test = read.csv(path, 
                  skip = 15,
                  header = FALSE,
                  col.names = c("date", "time", "unit", "temperature") )
  allnames = str_split( path, pattern = "/", simplify = TRUE)
  test$condition = str_extract(allnames[, ncol(allnames)], pattern = "B|G") #extract the litter condition from the file name and add as a column
  test$species = str_extract(allnames[, ncol(allnames)], pattern = "SS|SP") #extract the species from the file name and add as a column
  test$quadrat = str_extract(allnames[, ncol(allnames)], pattern = "Q[1-9]") #extract the quadrat from the file name and add as a column
  test
}

read_fun(allfiles[1]) # use to test the function on an individual file (this can be tested on any of them)

Microphase1_iButtons_df = map_dfr(allfiles, read_fun) # combine all the files
Microphase1_iButtons_df$loggertype <- "iButton" #add a column for the kind of logger used (iButton in this case)

# add a column that calculates the elapsed time since the experiment started

#create a column assigning rainfall to plot numbers
Microphase1_iButtons_df <- Microphase1_iButtons_df |>
  mutate(rainfall = case_when(
    endsWith(quadrat, "Q1") ~ "0",
    endsWith(quadrat, "Q2") ~ "5",
    endsWith(quadrat, "Q3") ~ "10",
    endsWith(quadrat, "Q5") ~ "0",
    endsWith(quadrat, "Q7") ~ "0",
    endsWith(quadrat, "Q11") ~ "0",
    endsWith(quadrat, "Q13") ~ "0",
    endsWith(quadrat, "Q4") ~ "5",
    endsWith(quadrat, "Q8") ~ "5",
    endsWith(quadrat, "Q12") ~ "5",
    endsWith(quadrat, "Q14") ~ "5",
    endsWith(quadrat, "Q6") ~ "10",
    endsWith(quadrat, "Q9") ~ "10",
    endsWith(quadrat, "Q10") ~ "10",
    endsWith(quadrat, "Q15") ~ "10",
  ))

# Create a new combined datetime column
Microphase1_iButtons_df <- Microphase1_iButtons_df |>
  mutate(datetime = as.POSIXct(paste(date, time), format = "%m/%d/%y %I:%M:%S %p", tz = "Africa/Johannesburg"))


```

```{r}
#| label: clean data & save L1 file

# Define the experiment start time in Johannesburg time zone
start_time <- as.POSIXct("2022-07-24 11:00:00", tz = "Africa/Johannesburg")

# Filter, remove NAs, and compute elapsed time in hours
Microphase1_iButtons_df <- Microphase1_iButtons_df |>
  filter(datetime >= start_time & datetime <= start_time + lubridate::hours(48)) |>
  mutate(elapsed_time = as.numeric(difftime(datetime, start_time, units = "hours")))

# change rainfall to a factor
Microphase1_iButtons_df$rainfall <- as.factor(Microphase1_iButtons_df$rainfall)

# write the dataframe as a L1 file ready for future analysis and plotting
write_csv(Microphase1_iButtons_df, here("data", "microphase1_iButtons_L1.csv"))
  
```

## L1 iButton Work-Up

```{r}
#| label: read in L1 CSV
Microphase1_iButtons_df <- read_csv(here("data","microphase1_iButtons_L1.csv"))

Microphase1_iButtons_df$rainfall <- as.factor(Microphase1_iButtons_df$rainfall)
```

```{r}
#| label: individual logger plots

all_iButtons_M1_p <- Microphase1_iButtons_df |>
  ggplot(aes(x = elapsed_time, y = temperature,
                           color = rainfall,
                           group = quadrat)) +
  geom_line() +
  facet_grid(rows = vars(condition), cols = vars(species)) +
  labs(x = "Elapsed Time",
       y = "Temperature (°C)",
       color = "Rainfall") +
  theme_classic(base_size = 16) +
  theme(
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
    strip.background = element_rect(fill = "gray80", color = "black"),
    strip.text = element_text(color = "black")
  )
all_iButtons_M1_p


# note that a few loggers look different, particularly in the 0 mm plots
```

```{r}
#| label: reduce L1 logger data to a single smoothed line

### NOTE: this should print a ribbon w SE but it does not, apparently since not multiple logs per time (time of logs not perfectly aligned). Data can be binned first to have multiple points to get an SE.

rainfall_colors <- c("red","green","blue")

# plot with a loess function
Micro1_temperature_means_p <- Microphase1_iButtons_df |>
  ggplot(aes(x = elapsed_time, y = temperature,
                           color = as.factor(rainfall),
                           group = interaction(rainfall, species, condition))) +
  geom_smooth(method = "loess", se = TRUE, span = 0.2, linewidth = 1) +
  scale_colour_manual(values = rainfall_colors) +
  facet_grid(rows = vars(condition), cols = vars(species)) +
  labs(x = "Elapsed Time (hours)",
       y = "Temperature (°C)",
       color = "Rainfall (mm)") +
  theme_classic(base_size = 16)
Micro1_temperature_means_p

```

COMBIED THE FIGURE WITH PATCHWORK

library(patchwork)

combined_plot \<- micro1_litter_p2 / micro1_temp_p + plot_layout(heights = c(1, 1)) combined_plot

```{r}
#| label: NEEDS WORK HERE

# THIS NEEDS TO BE FIXED AND ADDED TO THE BOTTOM OF THE LITTER MICRO1 litter mass graph

micro1_temp_p <- Microphase1_iButtons_df |>
  ggplot(aes(x = elapsed_time, y = temperature,
             color = as.factor(rainfall),
                           group = interaction(rainfall, species, quadrat, condition))) +
  geom_smooth(method = "loess", span = 0.2, se = TRUE, linewidth = 1) +
  facet_grid(. ~ rainfall, labeller = labeller(rainfall = function(x) paste0(x, " mm"))) +
 # scale_color_manual(values = TYPE_colors) +
  labs(x = "Elapsed Time",
       y = "Temperature (°C)",
       color = "") +
  theme_classic(base_size = 16) +
  theme(
    panel.spacing = unit(1, "lines"),
    strip.background = element_rect(fill = "gray80", color = "black"),
    strip.text = element_text(color = "black"),
    panel.border = element_rect(color = "black", fill = NA, linewidth = 0.8),
    legend.position = "none"
  )
micro1_temp_p

```

\
